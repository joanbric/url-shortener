---
export interface Props {
	id?: string;
	url: string;
	class?: string;
}
const className = Astro.props.class || '';
const id = Astro.props.id || 'btnCopier';
---

<span class="relative">
	<button
		id={id}
		class={`${className} `}
		type="button"
		title="Copy URL to clipboard"
		data-copier-button
		data-url={Astro.props.url}
	>
		<svg
			xmlns="https://www.w3.org/2000/svg"
			width="24"
			height="24"
			fill="none"
			stroke="currentColor"
			stroke-linecap="round"
			stroke-linejoin="round"
			stroke-width="2"
			class="icon icon-tabler icons-tabler-outline icon-tabler-copy"
			><path
				stroke="none"
				d="M0 0h24v24H0z"
			></path><path
				d="M7 9.667A2.667 2.667 0 0 1 9.667 7h8.666A2.667 2.667 0 0 1 21 9.667v8.666A2.667 2.667 0 0 1 18.333 21H9.667A2.667 2.667 0 0 1 7 18.333z"
			></path><path
				d="M4.012 16.737A2.005 2.005 0 0 1 3 15V5c0-1.1.9-2 2-2h10c.75 0 1.158.385 1.5 1"
			></path></svg
		>
	</button>
	<small
		class="text-xs invisible text-white bg-green-500 font-bold px-4 py-2 rounded-full absolute text-nowrap top-0 -translate-y-full left-1/2 -translate-x-1/2"
		>URL Copied!</small
	>
</span>
<style>
	.copied {
		animation: successful 2s ease-in-out forwards;
	}

	.copied ~ small {
		animation: fadeOut 2s ease-in-out forwards;
	}

	@keyframes fadeOut {
		from {
			visibility: visible;
			opacity: 1;
		}
		to {
			visibility: hidden;
			opacity: 0;
		}
	}

	@keyframes successful {
		from {
			color: oklch(72.3% 0.219 149.579);
		}
		90% {
			color: oklch(72.3% 0.219 149.579);
		}
		to {
			color: inherit;
		}
	}
</style>

<script>
	import { copyToClipboard } from '@libs/copyToClipboard';
	const button = document.querySelector(
		'button[data-copier-button]'
	) as HTMLButtonElement;
	if (!button) throw new Error('Copy button not found');

	button.addEventListener('click', async () => {
		const url = button.dataset.url;
		if (!url) throw new Error('URL not provided');
		const success = await copyToClipboard(url);
		if (success) {
			button.classList.add('copied');
			setTimeout(() => {
				button.classList.remove('copied');
			}, 2000);
		} else {
			alert('Failed to copy URL.');
		}
	});
</script>
